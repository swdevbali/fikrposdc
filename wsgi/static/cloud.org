#+TITLE: FikrPOS - An Elegant POS Cloud Based Solution for You
#+AUTHOR: Eko Wibowo
* Cloud Concept in FikrPOS
  FikrPOS solution is offered with two plans :
  1. Personal Plan

     For single unit of POS system (maybe a small minimarket with only one unit of installation), but still want to manage their system using a computerized POS system. Consisting of a single PC + printer + barcode scanner. Without the need to connect itself to the internet for a Distribution Control system.
  2. Cloud Plan 

     This is the case that we dealing with "Koperasi Penjara", where the system consists of a several branches, each with multiple installation of POS sytem, where all the branches need to be managed by a centralized Distribution Center in the internet (=cloud. Here, the term cloud is interchangeably with internet)

  Anytime user can upgrade themself from Personal Plan to Cloud Plan. I create this arrrangement, to target a larger audience : those who currently didn't want/know the benefit of having their POS data backed up to the cloud. In the process, we can try patiently to persuade them to upgrade to Cloud plan.
** Personal Plan
   Personal Plan is actually just a simplified version of Cloud plan. Actually, whether user install POS client as Personal Plan or as Cloud Plan, they are still using the same application. The different is just that in Personal Plan, they can't use the POS client to get/stored data from/to the cloud. This mean, upgrading a personal plan is as simple as giving them the necessary token to be able to login to the cloud.

** Cloud Plan
   All the features that we already agreed are here : multiple branches with one single Distribution Centre where all their product, category and daily cashflow is seamlessly stored. But with just one little extra addition : everyone can signup to this DC, and have access to all feature that Kopjar has. That's all there is! I strive to make this solution as sustainable as possible. Meaning, we don't do extra work (or as little as possible) when our user base grown large (Amiin).

   We really get helped from http://www.openshift.com. Alhamdulillah. Without it, I simply can't think of a better way of making a DC system. I know that we previously plan to get ourselves a Windows Based VPS. But it's just too costly and yet, I am not that enthusiast in coding for a Windows Based Server/Web application. Openshift offer a generous workable free plan solution : 1 GB quota. I think we can live with a free plan for our initial launch of the application. Let see our progress, and if we do need an upgrade, we can pay them USD 20/month. I am sure, if we do need to pay them in that sums, this mean our business already running great.

* Pricing
  One main reason why we should consider a Cloud Based Solution is to get a broad range of user as much as possible and to be able to charge them in monthly/anually bases (with lower price than if they were charge personally). Of course, this thinking should be adjusted to meet your business style. We should discuss this more after we have established a solid solution for Kopjar. As a guide, a Personal Plan should let user pay our product once and for all. While with a Cloud Plan --as it use server resource-- we should charge them monthly/anually (or maybe initially and then monthly/anually)

* Cloud Features
  This list already include what we already agreed upon, with added feature as it's now being constructed as cloud solution. I use this list to carefully implement our DC.
  1. Admin of this application will be able to manage their DC using internet enabled devices. The website in http://fikrposdc-ekowibowo.rhcloud.com is a responsive one. Meaning that it is designed to be run optimally whether we use desktop browser or mobile browser (try opening it with your Android/iOS device). At this current state, I would like to optimize it, as the Carousel feature is taking too much bandwith.
  2. In regard of Feature #1, User will be able to get the latest report/chart that show their business performance by just using their Smartphone. This is the point that should encourage user to use our Cloud Plan. I really eager that someday we have our own dedicate Android/iOS application. I am imagining business owner will going to be really happy if they can manage their POS business anywhere.
  3. At the current design of the system, I prepare DC to hold this kind of data :
     * All branches that exist in this system. 

       Branches is entity that allowed to post DailyCashFlow data to the DC. Beneath DC we have POS installation that do the actual POS activities. At our early design, we miss this part. We only think in term of Branches to DC communication. After I think of it thoroughly, we must also stored from which POS installation does the transaction comming from. It will useful or auditing, security, etc. But, it's okay if we designed only branches that have the communication with DC. Because, if we do need every POS installation able to communicate with DC, we can easily register them as Branch.
     * All users reside within this POS system, from any branches.
     * DailyCashFlow from all branches. This mean, the actual/detail transaction is still left at Branch/each POS installation. This shall minimize the problem of losing much space in our database.
     * Product catalog having : category and product item. 
     * Stock data. Will stored in the same level of abstraction as DailyCashFlow, that is only summarize its stock\_opening and stock\_closing (which mean we'll be able to calculate its stock change) dailly.
    
       I believe those data already enough to start a great POS cloud system, but should you have another idea, just discuss it. 
    
  4. As we use Openshift, we are relieve from server maintenance complexity. And with the current free plan, we don't have to pay them. Another great benefit

  5. A free signup! This will allow our use to get a taste of the application / cloud. Currently I never think of securing my desktop application by mean of serial key/activation key. But, I think we must have a client application distributed as a limited function demo/time trial. This will left as added work after our Kopjar solution is completed.

* Coding Task

This is all coding tasks that left to make the final phase of the application complete. I have one important obstacle : I really, really need a hand on the POS Printer. Haven't have time to meet my friend who sold it. At the minimum, I must be able to rent it. Task with TODO is task that currently being working on.

I've omitted of creating a document on the workflow of the Application. This is not Good.
So, this is the link to our file:application-workflow.org, which document workflow of our application. I use this to be able to add cloud workflow to our existing application workflow.

** TODO Creating application initialisation scenario with DC communication in mind. Personal plan is skipped at the moment.
** Refine Daily Session Manajemen : Make it more user friendly. Currently, it still confusing
*** Review C# code
*** Focus on streamlining the starting/ending of session process
** Product and category initialization from Cloud
** Branch, User and POS instance registering to the Cloud
** Refine Printing feature
** FINAL : Test overall functionality of the system
